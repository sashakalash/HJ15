'use strict';
const canvas = document.querySelector('canvas');
const ctx = canvas.getContext('2d');
const PI = Math.PI;

function getRand(min, max) {
	return Math.random() * (max - min) + min;
}

function getStar() {
	const starsSum = Math.round(getRand(50, 200));
	for (let i = 0; i <= starsSum; i++) {
		const starSize = getRand(0, 1.1);
		const x = Math.round(getRand(0, canvas.width));
		const y = Math.round(getRand(0, canvas.height));        
		ctx.beginPath();
		ctx.strokeStyle = 'white';
		ctx.arc(x, y, starSize / 2, 0, 2 * PI);
		ctx.stroke();
		ctx.closePath();        
	}   
}

getStar();
// При этом вычислять текущее положение каждого объекта необходимо от его изначального положения. 
// А не от измененного в предыдущий тик. Так как формула расчета положения задаёт колебания вокруг 
// базовой точки, координаты которой будут первично сгенерированы при создании объекта.

// Фон должен перерисовываться со скоростью 20 кадров в секунду.

// Для анимации необходимо создать случайное количество объектов в диапазоне о
// т 50 до 200. При этом количество крестиков и кругов должно быть равным.

// Параметры объектов
// У всех объектов должен быть определен относительный размер size, случайное число 
// от 0.1 до 0.6 единиц, который влияет на другие параметры объекта. Все объекты имеют белую обводку. 
// Толщина обводки равна 5 * size.

// Круг
// Радиус круга равен 12 * size. Круг закрашивать не нужно.

// Крестик
// Сторона крестика равна 20 * size. Также у крестика необходимо определить 
// угол поворота от 0 до 360 градусов. Крестик должен медленно поворачиваться 
// со случайной скоростью в диапазоне -0.2 до 0.2 на тик (один этап перерисовки).